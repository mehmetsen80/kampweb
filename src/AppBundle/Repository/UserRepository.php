<?php

namespace AppBundle\Repository;
use Symfony\Bridge\Doctrine\Security\User\UserLoaderInterface;

include_once 'AbstractRepository.php';

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends AbstractRepository implements UserLoaderInterface
{
    public function loadUserByUsername($username)
    {
        return $this->createQueryBuilder('u')
            ->select('u')
            ->where('u.username = :username')
            ->setParameter('username', $username)
            ->getQuery()
            ->getOneOrNullResult();
    }

    public function loadByMaleGender(){
            return $this->createQueryBuilder('u')
                ->select('u')
                ->where('u.gender = :ugender')
                ->setParameter('ugender', 'Male')
                ->getQuery()
                ->getResult();
        }
    public function loadByFemaleGender(){
        return $this->createQueryBuilder('u')
            ->select('u')
            ->where('u.gender = :ugender')
            ->setParameter('ugender', 'Female')
            ->getQuery()
            ->getResult();
    }

    public function loadByAdultAge(){

        return $this->createQueryBuilder('u')
            ->select('u')
            ->where('u.birthday <= :ubirthday')
            ->setParameter('ubirthday', date('1991/01/01'))
            ->getQuery()
            ->getResult();

    }

    public function loadByYouthAge(){

        return $this->createQueryBuilder('u')
            ->select('u')
            ->where('u.birthday >= :ubirthday')
            ->setParameter('ubirthday', date('1998/01/01'))
            ->getQuery()
            ->getResult();

    }

    public function loadByStudent(){

        return $this->createQueryBuilder('u')
            ->select('u')
            ->where('u.birthday >= :ubirthday')
            ->setParameter('ubirthday', date('1991/01/01'))
            ->andWhere('u.birthday < :ubirthday1')
            ->setParameter('ubirthday1', date('1998/01/01'))
            ->getQuery()
            ->getResult();

    }

    public function loadUsersByAttendees($id){

//        return $this->createQueryBuilder('u')
//            ->select('u')Ëš
//            ->where('IDENTITY(u.attendees) = ?')
//            //->andWhere('a.active = 1')
//            ->setParameter(1, $id)
//            ->getQuery();
//            ->getResult()
          $em = $this->getEntityManager();
          //return $em->createQuery("SELECT u FROM User Minus ")
          return $em->createQuery("SELECT u FROM User MINUS SELECT a FROM Attendee WHERE a.id ? u.id");
    }
}
